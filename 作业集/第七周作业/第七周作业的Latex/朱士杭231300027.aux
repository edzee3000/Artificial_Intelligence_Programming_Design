\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}如何使用函数对功能进行抽象，有什么优势及可能存在的问题？}{1}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}优势}{1}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}可能存在的问题}{1}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2}对比C/C++以及python对函数嵌套的规定，并简述允许函数嵌套对程序设计的影响}{1}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}对比}{1}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}影响}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3}请编写一个用于性能检测的装饰器，可以输出被他装饰的函数的运行时间}{2}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces 自定义装饰器来测试函数性能/运行时间}}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {4}折扣策略}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}实现每种折扣策略具体的折扣计算函数}{3}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces 折扣计算函数}}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}额外的折扣策略}{3}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces 额外折扣计算函数}}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}装饰器函数}{4}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces 装饰器函数}}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}装饰器函数的作用与适用范围}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.4.1}作用}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.4.2}适用范围}{4}{}\protected@file@percent }
\gdef \@abspage@last{4}
